services:
  # Web App
  #####################################################
  frontend:
    build: ./frontend
    container_name: rq_frontend
    restart: unless-stopped
    depends_on:
      database:
        condition: service_healthy
    networks:
      - default
      - reverse-proxy

  # Database
  #####################################################
  database:
    image: postgres:16
    container_name: rq_database
    restart: unless-stopped
    networks:
      - default
    # ports:
    #   - "5432:5432"
    volumes:
      - database:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: "rq"
      POSTGRES_USER: "support"
      POSTGRES_PASSWORD: "changeme"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U support -d rq"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Socket
  #####################################################
  socket:
    build: ./socket
    container_name: rq_socket
    restart: unless-stopped
    networks:
      - default
    # ports:
    #   - "3010:3010"

volumes:
  database:
    name: rq_database

networks:
  default:
    name: rq
  reverse-proxy:
    name: reverse-proxy
    external: true
